#include "stdafx.h"
#include <iostream>
#include <vector>
#include <fstream>
#include "Graf.h"
	
using namespace std;

const int INF = 1000000000;

int main()
{
	ifstream fin("input.txt");
	
	int n;			//Count of vertexs.
	int s;			//A start vertex.
	
	fin >> n >> s;
	
	--s;
	
	Graf* graf = graf_create(n);
	
	while (!fin.eof())
	{
		int x, y, ves;
		
		fin >> x >> y >> ves;
		
		--x, --y;
		
		add_rib(graf, x, y);
		ves_set(graf, x, y, ves);
	}
	
	vector<int> dist(n, INF);
	vector <bool> visited(n);
	
	dist[s] = 0;

	for (int i = 0; i < n; ++i)
	{
		int vertex = -1;

		for (int j = 0; j < n; ++j)
		{
			if (!visited[j] && (vertex == -1 || dist[j] < dist[vertex]))
			{
				vertex = j;
			}
		}
		
		if (dist[vertex] == INF)
		{
			break;
		}

		visited[vertex] = true;
		
		Iter* to = iter_create(graf, vertex);

		while (!is_neighbors(to))
		{
			int len = get_ves(to);
				
			if (dist[vertex] + len < dist[get_vertex(to)])
			{
				dist[get_vertex(to)] = dist[vertex] + len;
			}
			
			next_iterator(to);
		}

		delete_iterator(to);
	}

	delete_graf(graf);

	for (int i = 0; i < n; i++)
	{
		cout << dist[i] << " ";
	}

	cout << endl;
	system("Pause");
}
